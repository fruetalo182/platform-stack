---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-server
  namespace: droneci
  labels:
    app: drone-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drone-server
  template:
    metadata:
      labels:
        app: drone-server
    spec:
      containers:
      - name: drone-server
        image: drone/drone:2.20.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "400Mi"
            cpu: "250m"
          limits:
            memory: "800Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        envFrom:
        - secretRef:
            name: droneci-secret

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drone-server
  labels:
    app: drone-server
  namespace: droneci
  annotations:
    # Ingress Core Settings
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    ## SSL Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:region:account-number:certificate/certificate-id
    # External DNS - Creates DNS record in Cloudflare
    external-dns.alpha.kubernetes.io/hostname: droneci.domain.app
    # Allow Cloudflare Ips
    alb.ingress.kubernetes.io/inbound-cidrs: 10.1.0.0/16, 103.21.244.0/22, 103.22.200.0/22, 103.31.4.0/22, 104.16.0.0/12, 108.162.192.0/18, 131.0.72.0/22, 141.101.64.0/18, 162.158.0.0/15, 172.64.0.0/13, 173.245.48.0/20, 188.114.96.0/20, 190.93.240.0/20, 197.234.240.0/22, 198.41.128.0/17
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: drone-server
                port:
                  number: 80


---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: droneci-secret
  namespace: droneci
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: global-secret-store
    kind: ClusterSecretStore
  target:
    name: droneci-secret
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: droneci-secret

---
apiVersion: v1
kind: Service
metadata:
  name: drone-server
  namespace: droneci
  labels:
    app: drone-server
spec:
  type: NodePort
  selector:
    app: drone-server
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80